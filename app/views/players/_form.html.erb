<%= form_with(model: player, local: true) do |form| %>
  <% if player.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(player.errors.count, "error") %> prohibited this player from being saved:</h2>

      <ul>
      <% player.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="sheet-block">
    <div class="field" id="inline-item">
      <%= form.label :name, t('sheet.name') %>
      <%= form.text_field :name, id: :player_name, required: true %>
    </div>

    <div class="field" id="inline-item">
      <%= form.label :race_id, t('sheet.race') %>
      <%= form.collection_select(:race_id, Race.all, :id, :name, {}, {class: 'race', onchange: "race_update()", id: 'race-id'}) %>
      
    </div>

    <div class="field" id="inline-item">
      <%= form.label :alignment_id, t('sheet.alignment') %>
      <%= form.collection_select :alignment_id, Alignment.all, :id, :kind, {}, { id: 'alignment-id'} %>
    </div>

    <div class="field" id="inline-item">
      <%= form.label :dnd_class_id, t('sheet.class') %>
      <%= form.collection_select(:dnd_class_id, DndClass.all, :id, :name, {},{class: 'class', onchange: "class_update()", id: 'class-id'}) %>
    </div>
    
    <div class="field" id="inline-item">
      <%= form.label :age, t('sheet.age') %>
      <%= form.number_field :age, id: :player_age, min: 5, max:999, default: 7 %>
    </div>

    <div class="field" id="inline-item">
      <%= form.label :gender, t('sheet.gender') %>
      <%= form.select(:gender, options_for_select([['Feminino', 1], ['Masculino', 2]])) %>
    </div>
  </div>

  <hr>
  
  <style>


</style>
 

<table class="habilities" style="display: inline-block;">
  <tr>
    <th colspan="2" class="top-table" id="left-border">Habilidade</th>
    <th class="top-table" id="middle-border">Bônus Raça</th> 
    <th class="top-table" id="middle-border">Mod. Total</th>
    <th class="top-table" id="right-border">Custo</th>
    <th colspan="4"></th>
  </tr>
  <tr>
    <td class="table-line" id="str-line"><%= form.label :str, t('sheet.str') %></td>
    <td class="table-line" ><%= form.number_field :str, id: :player_str, min: 3, max: 18, class: "hability-area", onchange: "change_hability('str')" %></td>
    <td class="table-line" id="race-str">0</td>
    <td class="table-line" id="str">-1</td>
    <td class="table-line" id="str-cost">0</td>
    <td class="table-line" id="bold-line"><%= t('sheet.hp') %></td>
    <td class="table-line" id="pvs">12</td>
    <td class="table-line" id="bold-line">Deslocamento</td>
    <td class="table-line" id="speed">9</td>
  </tr>
  <tr>
    <td class="table-line" id="dex-line"><%= form.label :dex, t('sheet.dex') %></td>
    <td class="table-line" ><%= form.number_field :dex, id: :player_dex, min: 3, max: 18, class: "hability-area", onchange: "change_dex()" %></td>
    <td class="table-line" id="race-dex">0</td>
    <td class="table-line" id="dex">-1</td>
    <td class="table-line" id="dex-cost">0</td>
    <td class="table-line" id="bold-line"><%= t('sheet.ac') %></td>
    <td class="table-line" id="ac">0</td>
    <td class="table-line" id="bold-line"><%= t('sheet.bab')%></td>
    <td class="table-line" id="bab">1</td>
  </tr>
  <tr>
    <td class="table-line" id="con-line"><%= form.label :con, t('sheet.con') %></td>
    <td class="table-line" ><%= form.number_field :con, id: :player_con, min: 3, max: 18, class: "hability-area", onchange: "change_con()" %></td>
    <td class="table-line" id="race-con">0</td>
    <td class="table-line" id="con">-1</td>
    <td class="table-line" id="con-cost">0</td>
    <td class="table-line" id="bold-line" colspan="2">Testes de Resistência</td>
    <td class="table-line" id="bold-line"><%= t("sheet.skill")%></td>
    <td class="table-line" id="skill-pts">9</td>
  </tr>
  <tr>
    <td class="table-line" id="intel-line"><%= form.label :intel, t('sheet.intel') %></td>
    <td class="table-line" ><%= form.number_field :intel, id: :player_intel, min: 3, max: 18, class: "hability-area", onchange: "change_intel()" %></td>
    <td class="table-line" id="race-intel">0</td>
    <td class="table-line" id="intel">-1</td>
    <td class="table-line" id="intel-cost">0</td>
    <td class="table-line"><%= t('sheet.fort') %></td>
    <td class="table-line" id="fort">2</td>
    <td></td>
  </tr>
  <tr>
    <td class="table-line" id="wis-line"><%= form.label :wis, t('sheet.wis') %></td>
    <td class="table-line" ><%= form.number_field :wis, id: :player_wis, min: 3, max: 18, class: "hability-area", onchange: "change_wis()" %></td>
    <td class="table-line" id="race-wis">0</td>
    <td class="table-line" id="wis">-1</td>
    <td class="table-line" id="wis-cost">0</td>
    <td class="table-line"><%= t('sheet.ref') %></td>
    <td class="table-line" id="ref">0</td>
    <td class="table-line" id="bold-line" colspan="2"><%= "Pontos" %></td>
  </tr>
  <tr>
    <td class="table-line" id="cha-line" ><%= form.label :cha, t('sheet.cha') %></td>
    <td class="table-line" ><%= form.number_field :cha, id: :player_cha, min: 3, max: 18, class: "hability-area", onchange: "change_hability('cha')" %></td>
    <td class="table-line" id="race-cha">0</td>
    <td class="table-line" id="cha">-1</td>
    <td class="table-line" id="cha-cost">0</td>
    <td class="table-line"><%= t('sheet.will') %></td>
    <td class="table-line" id="will">0</td>
    <td class="table-line" id="points" colspan="2">0</td>
  </tr>
</table>



  <div class="actions" id="submit">
    <%= form.submit t("sheet.Save")%>
  </div>
  <div class="actions" id="submit">
    <%= form.submit t("sheet.Continue") %>
  </div>
<% end %>

<%# // IDADES POR RAÇAS E CLASSES %>
<script>

    update();

    function class_update(){
      age_change();
      barbarian_run();
      check_all_mods(); //<------ essa função tá certa???
      set_hp();
      resistence_mods();
      update_skill_points();
      update_bab();
      update_aligments();
    }

    function race_update(){
      age_change();
      race_hability_change();
      check_all_mods(); //<------ essa função tá certa???
      set_hp();
      resistence_mods();
      update_skill_points();
    }

    function update(){
      change_hability("str");
      change_dex();
      change_con();
      change_intel();
      change_wis();
      change_hability("cha");
    }

    function update_aligments(){
      var dnd_class = get_int_value("class-id");
      if(dnd_class == 1 || dnd_class == 2){
        no_loyal();
      } else if(dnd_class == 4) {
        just_neutral();
      } else if(dnd_class == 9) {
        just_loyal();
      } else if(dnd_class == 10) {
        hero();
      }else {
        all_aligments();
      }
    }

    function clear_all_aligments(){
      var select = document.getElementById("alignment-id");
      var tam = select.length 
      for (var i=0; i<tam; i++){
        select.remove(0);
      }
    }

    function no_loyal(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var nb = document.createElement("option");
      nb.text = "Neutro e Bom";
      var nn = document.createElement("option");
      nn.text = "Neutro Puro";
      var nm = document.createElement("option");
      nm.text = "Neutro e Mau";
      var cb = document.createElement("option");
      cb.text = "Caótico e Bom";
      var cn = document.createElement("option");
      cn.text = "Caótico e Neutro";
      var cm = document.createElement("option");
      cm.text = "Caótico e Mau"; 
      select.add(nb); 
      select.add(nn); 
      select.add(nm); 
      select.add(cb); 
      select.add(cn); 
      select.add(cm); 
    }

    

    function just_loyal(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var lb = document.createElement("option");
      lb.text = "Leal e Bom";
      var ln = document.createElement("option");
      ln.text = "Leal e Neutro";
      var lm = document.createElement("option");
      lm.text = "Leal e Mau";
      select.add(lb);
      select.add(ln);
      select.add(lm); 
    }

    function just_neutral(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var ln = document.createElement("option");
      ln.text = "Leal e Neutro";
      var nb = document.createElement("option");
      nb.text = "Neutro e Bom";
      var nn = document.createElement("option");
      nn.text = "Neutro Puro";
      var nm = document.createElement("option");
      nm.text = "Neutro e Mau";
      var cn = document.createElement("option");
      cn.text = "Caótico e Neutro";
      select.add(ln);
      select.add(nb); 
      select.add(nn); 
      select.add(nm); 
      select.add(cn); 
    }

    function hero(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var lb = document.createElement("option");
      lb.text = "Leal e Bom";
      select.add(lb); 
    }




    function all_aligments(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var lb = document.createElement("option");
      lb.text = "Leal e Bom";
      var ln = document.createElement("option");
      ln.text = "Leal e Neutro";
      var lm = document.createElement("option");
      lm.text = "Leal e Mau";
      var nb = document.createElement("option");
      nb.text = "Neutro e Bom";
      var nn = document.createElement("option");
      nn.text = "Neutro Puro";
      var nm = document.createElement("option");
      nm.text = "Neutro e Mau";
      var cb = document.createElement("option");
      cb.text = "Caótico e Bom";
      var cn = document.createElement("option");
      cn.text = "Caótico e Neutro";
      var cm = document.createElement("option");
      cm.text = "Caótico e Mau";
      select.add(lb);
      select.add(ln);
      select.add(lm); 
      select.add(nb); 
      select.add(nn); 
      select.add(nm); 
      select.add(cb); 
      select.add(cn); 
      select.add(cm);   
    }








    function change_hability(tag) {
      check_mod(tag);
      calculate_point(tag);
      count_all_points();
    }

    function update_bab(){
      var dnd_class = get_int_value("class-id");
      var valor = 0;
      if (dnd_class == 1 || dnd_class == 6 || dnd_class == 10 || dnd_class == 11) {
        valor += 1;
      }
      set_inner_html("bab", valor);
    }

    function get_cost_points(tag){
      var value = 0;
      var hab = get_int_value("player_"+tag);
      hab += get_int_html("race-"+tag);
      value = cost(hab);
      return parseInt(value);
    }

    function count_all_points(){
      var total = get_cost_points("str");
      total += get_cost_points("dex");
      total += get_cost_points("con");
      total += get_cost_points("intel");
      total += get_cost_points("wis");
      total += get_cost_points("cha");
      set_inner_html("points", total);
    }

    function barbarian_run(){
      if (get_int_value("class-id") == 1){
        set_inner_html("speed",12);
      } else {
        set_inner_html("speed",9);
      }
    }

    function set_hp(){
      var value = get_int_html("con");
      value += get_life_die(get_int_value("class-id"));
      set_inner_html("pvs", value);
    }

    function change_con(){
      check_mod("con");
      calculate_point("con");
      set_hp();
      count_all_points();
      var class_id = get_int_value("class-id");
      fortitude_mod(class_id); 
    }

    function change_dex(){
      check_mod("dex");
      calculate_point("dex");
      count_all_points();
      var class_id = get_int_value("class-id");
      reflexes_mod(class_id);
      update_AC();
    }

    function change_intel(){
      check_mod("intel");
      calculate_point("intel");
      count_all_points();
      var class_id = get_int_value("class-id");
      update_skill_points();
    }

    function change_wis() {
      check_mod("wis");
      calculate_point("wis");
      count_all_points();
      var class_id = get_int_value("class-id");
      will_mod(class_id); 
    }

    function update_AC(){
      var mod = get_int_html("dex");
      set_inner_html("ac",10+mod);
    }

    function resistence_mods(){
      var class_id = get_int_value("class-id")
      fortitude_mod(class_id); 
      reflexes_mod(class_id);
      will_mod(class_id);
    }

    function update_skill_points(){
      var mod = get_int_html("intel");
      var dnd_class = get_int_value("class-id");
      var race = get_int_value("race-id"); 
      if (race <=4) {
        mod  += 1;
      } 
      if (dnd_class == 1 || dnd_class == 4 || dnd_class == 9){
        mod = (4+mod)*4;
      } else if (dnd_class == 2 || dnd_class == 11){
        mod = (6+mod)*4;
      } else if (dnd_class == 3 || dnd_class == 5 || dnd_class == 6 || dnd_class == 8 || dnd_class == 10){
        mod = (2+mod)*4;
      } else if (dnd_class == 7){
        mod = (8+mod)*4;
      }
      set_inner_html("skill-pts", mod);
    }

    function fortitude_mod(class_id){
      var valor=0;
      if (class_id == 1 || class_id == 3 || class_id == 4 || class_id == 6 || class_id == 9 || class_id == 10 || class_id == 11 ){
        valor = 2;
      }
      valor += get_int_html("con");
      set_inner_html("fort",valor);
    }

    function reflexes_mod(class_id){
      var valor = 0;
      if (class_id == 2 || class_id == 7 || class_id == 9 || class_id == 11 ){
        valor = 2;
      }
      valor += get_int_html("dex");
      set_inner_html("ref", valor);
    }

    

    function will_mod(class_id){
      var valor = 0;
      if (class_id == 2 || class_id == 3 || class_id == 4 || class_id == 5 || class_id == 8 || class_id == 9 ){
        valor = 2;
      }
      valor += get_int_html("wis");
      set_inner_html("will",valor);
    }


    function get_life_die(dnd_class){
      var die = 0;
      if (dnd_class == 1){
        die = 12;
      } else if (dnd_class == 5 || dnd_class == 8){ //wiz & socrc
        die = 4;
      } else if (dnd_class == 2 || dnd_class == 7) { //bard & rouge
        die = 6
      } else if (dnd_class == 6 || dnd_class == 10) { //bard & rouge
        die = 10;
      } else {
        die = 8;
      }
      return die;
    }


    function check_mod(tag){
      var player = "player_"+tag;
      var race = "race-"+tag;
      var mod = get_int_value(player);
      mod += get_int_html(race);
      mod = hability_mod(mod);
      verify_colors(mod, tag);
    }
//novas funções

    //ok!
    function age_change (){
      var r = document.getElementById("race-id").selectedIndex; 
      var c = document.getElementById("class-id").selectedIndex; 
      age_mods(r, c);
    }

    function race_hability_change(){
      var race = parseInt(document.getElementById("race-id").selectedIndex);
      var st = 0, dx = 0, cn = 0, intel = 0, ws = 0, ch = 0;
      if (race<=3) { //humanos
        //nothing here, just some kisses =***
      } else if (race >=4 && race <=8)  { //elfos
        dx = 2;
        cn = -2;
      } else if (race >=9 && race <=11){ //anões
        cn = 2;
        ch = -2;
      } else if (race == 12){ //meio-orcs
        st = 2;
        intel = -2;
        ch = -2;
      } else if (race >=13 && race <=18){ //meio-elfos
        // wanna more kisses? not this time, smart ass! _|_
      }
      verify_colors(st,"race-str");
      verify_colors(dx,"race-dex");
      verify_colors(cn,"race-con");
      verify_colors(intel,"race-intel");
      verify_colors(ws,"race-wis");
      verify_colors(ch,"race-cha");
    }

    //ok
    function verify_colors(valor, place){
      document.getElementById(place).innerHTML = parseInt(valor);
      if (valor > 0) {
        document.getElementById(place).style.color="green";  
      } else if (valor == 0) {
        document.getElementById(place).style.color="inherit";  
      } else {
        document.getElementById(place).style.color="red";
      }
    }

    //ok
    function hability_mod(h){
      var num = parseInt(h); 
      if (num%2 == 1){
        num -= 1;
      }
      num /= 2;
      num -=5;
      return num;
    }

    function get_int_html(target){
      return parseInt(document.getElementById(target).innerHTML);
    }

    function get_int_value(target){
      return parseInt(document.getElementById(target).value);
    }

    function set_inner_html(target, value) {
      document.getElementById(target).innerHTML = value;
    }

    function check_all_mods(){
      check_mod("str");
      check_mod("dex");
      check_mod("con");
      check_mod("intel");
      check_mod("wis");
      check_mod("cha");
    }

    //ok
    function age_mods(race_id, class_id){
      var race = parseInt(race_id);
      var min = 0, max = 0;
      var dnd_class = parseInt(class_id);
      if (race<=3) { //humanos
        min = 15;
        max = 90;

        if (dnd_class == 0 || dnd_class == 4 || dnd_class == 6 ){ //bárbaro, ladino, feitic - min
          min+=1; 
        } else if ( dnd_class == 1 || dnd_class == 5 || dnd_class == 9 || dnd_class == 10) {//bardo, guerr, paladin, rang
          min+=1;
        } else { //clerig, druid, monk, wizz
          min+=2;
        }
        
      } else if (race >=4 && race <=8)  { //elfos
        min = 110;
        max = 750;

        if (dnd_class == 0 || dnd_class == 4 || dnd_class == 6 ){ //bárbaro, ladino, feitic - min
          min+=4; 
        } else if ( dnd_class == 1 || dnd_class == 5 || dnd_class == 9 || dnd_class == 10) {//bardo, guerr, paladin, rang
          min+=6;
        } else { //clerig, druid, monk, wizz
          min+=10;
        }

      } else if (race >=9 && race <=11){ //anões
        min = 40;
        max = 450;

        if (dnd_class == 0 || dnd_class == 4 || dnd_class == 6 ){ //bárbaro, ladino, feitic - min
          min+=3; 
        } else if ( dnd_class == 1 || dnd_class == 5 || dnd_class == 9 || dnd_class == 10) {//bardo, guerr, paladin, rang
          min+=5;
        } else { //clerig, druid, monk, wizz
          min+=7;
        }

      } else if (race == 12){ //meio-orcs
        min = 14;
        max = 450;

        if (dnd_class == 0 || dnd_class == 4 || dnd_class == 6 ){ //bárbaro, ladino, feitic - min
          min+=1; 
        } else if ( dnd_class == 1 || dnd_class == 5 || dnd_class == 9 || dnd_class == 10) {//bardo, guerr, paladin, rang
          min+=1;
        } else { //clerig, druid, monk, wizz
          min+=2;
        }

      } else if (race >=13 && race<=18){ //meio-elfos
        min = 20;
        max = 185;

        if (dnd_class == 0 || dnd_class == 4 || dnd_class == 6 ){ //bárbaro, ladino, feitic - min
          min+=1; 
        } else if ( dnd_class == 1 || dnd_class == 5 || dnd_class == 9 || dnd_class == 10) {//bardo, guerr, paladin, rang
          min+=2;
        } else { //clerig, druid, monk, wizz
          min+=3;
        }
      }

      document.getElementById("player_age").attributes[1].value = min;
      document.getElementById("player_age").attributes[2].value = max; 
      document.getElementById("player_age").value = min;

    }


    //calcula valor de pontos gastos
    function cost(v){
      var cost = 0;
      if (v<=14){
        cost = v - 8;
      } else if (v==15) {
        cost = 8; 
      } else if (v==16) {
        cost = 10;
      } else if (v==17) {
        cost = 13; 
      } else if (v==18) {
        cost = 16;
      }
      return cost;
    }


    //ok
    function calculate_point(tag){
      var value = 0;
      var hab = get_int_value("player_"+tag);
      hab += get_int_html("race-"+tag);
      value = cost(hab);
      //set_inner_html(tag+"-cost", value);

      verify_colors(value, tag+"-cost");
    }




    //fim novas funções



































/*



    function idade_racas(){
      var r = document.getElementById("race-id").selectedIndex; 
      var c = document.getElementById("class-id").selectedIndex;
      var min = 0;
      var max = 0;
      if (r<=3){ //humanos
        document.getElementById("race-str").innerHTML = 0;
        document.getElementById("race-str").style.color="black";
        document.getElementById("race-dex").innerHTML = 0;
        document.getElementById("race-dex").style.color="black";
        document.getElementById("race-con").innerHTML = 0;
        document.getElementById("race-con").style.color="black";
        document.getElementById("race-intel").innerHTML = 0;
        document.getElementById("race-intel").style.color="black";
        document.getElementById("race-wis").innerHTML = 0;
        document.getElementById("race-wis").style.color="black";
        document.getElementById("race-cha").innerHTML = 0;
        document.getElementById("race-cha").style.color="black";

        min = 15;
        max = 90;
        if (c == 0 || c == 4 || c == 6 ){ //bárbaro - min
          min+=1; 
        } else if ( c == 1 || c == 5 || c == 9 || c == 10) {
          min+=1;
        } else {
          min+=2;
        }
      } else if (r >=4 && r<=8){ //elfos
        min = 110;
        max = 750;

        document.getElementById("race-str").innerHTML= 0;
        document.getElementById("race-str").style.color="black";
        document.getElementById("race-dex").innerHTML = 2;
        document.getElementById("race-dex").style.color="green";
        document.getElementById("race-con").innerHTML = -2;
        document.getElementById("race-con").style.color="red";
        document.getElementById("race-intel").innerHTML = 0;
        document.getElementById("race-intel").style.color="black";
        document.getElementById("race-wis").innerHTML = 0;
        document.getElementById("race-wis").style.color="black";
        document.getElementById("race-cha").innerHTML = 0;
        document.getElementById("race-cha").style.color="black";

        if (c == 0 || c == 4 || c == 6 ){ //bárbaro - min
          min+=4; 
        } else if ( c == 1 || c == 5 || c == 9 || c == 10) {
          min+=6;
        } else {
          min+10;
        }
      } else if (r >=9 && r<=11){ //anões
        min = 40;
        max = 450;

        document.getElementById("race-str").innerHTML= 0;
        document.getElementById("race-str").style.color="black";
        document.getElementById("race-dex").innerHTML = 0;
        document.getElementById("race-dex").style.color="black";
        document.getElementById("race-con").innerHTML = 2;
        document.getElementById("race-con").style.color="green";
        document.getElementById("race-intel").innerHTML = 0;
        document.getElementById("race-intel").style.color="black";
        document.getElementById("race-wis").innerHTML = 0;
        document.getElementById("race-wis").style.color="black";
        document.getElementById("race-cha").innerHTML = -2;
        document.getElementById("race-cha").style.color="red";

        if (c == 0 || c == 4 || c == 6 ){ //bárbaro - min
          min+=3; 
        } else if ( c == 1 || c == 5 || c == 9 || c == 10) {
          min+=5;
        } else {
          min+7;
        }
      } else if (r == 12){ //meio-orcs
        min = 14;
        max = 450;

        document.getElementById("race-str").innerHTML= "2";
        document.getElementById("race-str").style.color="green";
        document.getElementById("race-dex").innerHTML = 0;
        document.getElementById("race-dex").style.color="black";
        document.getElementById("race-con").innerHTML = 0;
        document.getElementById("race-con").style.color="black";
        document.getElementById("race-intel").innerHTML = -2;
        document.getElementById("race-intel").style.color="red";
        document.getElementById("race-wis").innerHTML = 0;
        document.getElementById("race-wis").style.color="black";
        document.getElementById("race-cha").innerHTML = -2;
        document.getElementById("race-cha").style.color="red";

        if (c == 0 || c == 4 || c == 6 ){ //bárbaro - min
          min+=1; 
        } else if ( c == 1 || c == 5 || c == 9 || c == 10) {
          min+=1;
        } else {
          min+=2;
        }
      } else if (r >=13 && r<=18){ //meio-elfos
        min = 20;
        max = 185;

        document.getElementById("race-str").innerHTML= 0;
        document.getElementById("race-str").style.color="black";
        document.getElementById("race-dex").innerHTML = 0;
        document.getElementById("race-dex").style.color="black";
        document.getElementById("race-con").innerHTML = 0;
        document.getElementById("race-con").style.color="black";
        document.getElementById("race-intel").innerHTML = 0;
        document.getElementById("race-intel").style.color="black";
        document.getElementById("race-wis").innerHTML = 0;
        document.getElementById("race-wis").style.color="black";
        document.getElementById("race-cha").innerHTML = 0;
        document.getElementById("race-cha").style.color="black";

        if (c == 0 || c == 4 || c == 6 ){ //bárbaro - min
          min+=1; 
        } else if ( c == 1 || c == 5 || c == 9 || c == 10) {
          min+=2;
        } else {
          min+=3;
        }
      } 
      
      document.getElementById("player_age").attributes[1].value = min;
      document.getElementById("player_age").attributes[2].value = max; 
      document.getElementById("player_age").value = min;
      change_str();
      change_dex();
      change_con();
      change_intel();
      change_wis();
      change_cha();
      check_mods();
    }

    function change_str(){
      var valor = parseInt(document.getElementById("player_str").value);
      var race_bonus = parseInt(document.getElementById("race-str").innerHTML);
      document.getElementById("str-cost").innerHTML = cost(valor);
      valor += race_bonus;

      if (valor%2 == 1) {
        valor = valor -1;
      }
      valor = valor/2;
      valor -=5;
      if (valor > 0) {
        document.getElementById("str").style.color = "green";
      } else if (valor < 0){
        document.getElementById("str").style.color = "red";
      } else {
        document.getElementById("str").style.color = "black";
      }
      document.getElementById("str").innerHTML = valor;
    }

    function change_dex(){
      var valor = parseInt(document.getElementById("player_dex").value);
      var race_bonus = parseInt(document.getElementById("race-dex").innerHTML);
      document.getElementById("dex-cost").innerHTML = cost(valor);
      valor += race_bonus;

      if (valor%2 == 1) {
        valor = valor -1;
      }
      valor = valor/2;
      valor -=5;
      if (valor > 0) {
        document.getElementById("dex").style.color = "green";
      } else if (valor < 0){
        document.getElementById("dex").style.color = "red";
      } else {
        document.getElementById("dex").style.color = "black";
      }
      document.getElementById("dex").innerHTML = valor;
      document.getElementById("ac").innerHTML = 10+valor;
    }

    function change_con(){
      var valor = parseInt(document.getElementById("player_con").value);
      var race_bonus = parseInt(document.getElementById("race-con").innerHTML);
      document.getElementById("con-cost").innerHTML = cost(valor);
      valor += race_bonus;

      if (valor%2 == 1) {
        valor = valor -1;
      }
      valor = valor/2;
      valor -=5;
      if (valor > 0) {
        document.getElementById("con").style.color = "green";
      } else if (valor < 0){
        document.getElementById("con").style.color = "red";
      } else {
        document.getElementById("con").style.color = "black";
      }
      document.getElementById("con").innerHTML = valor;
    }

    function change_intel(){
      var valor = parseInt(document.getElementById("player_intel").value);
      var race_bonus = parseInt(document.getElementById("race-intel").innerHTML);
      document.getElementById("intel-cost").innerHTML = cost(valor);
      valor += race_bonus;

      if (valor%2 == 1) {
        valor = valor -1;
      }
      valor = valor/2;
      valor -=5;
      if (valor > 0) {
        document.getElementById("intel").style.color = "green";
      } else if (valor < 0){
        document.getElementById("intel").style.color = "red";
      } else {
        document.getElementById("intel").style.color = "black";
      }
      document.getElementById("intel").innerHTML = valor;
    }

    function change_wis(){
      var valor = parseInt(document.getElementById("player_wis").value);
      var race_bonus = parseInt(document.getElementById("race-wis").innerHTML);
      document.getElementById("wis-cost").innerHTML = cost(valor);
      valor += race_bonus;

      if (valor%2 == 1) {
        valor = valor -1;
      }
      valor = valor/2;
      valor -=5;
      if (valor > 0) {
        document.getElementById("wis").style.color = "green";
      } else if (valor < 0){
        document.getElementById("wis").style.color = "red";
      } else {
        document.getElementById("wis").style.color = "black";
      }
      document.getElementById("wis").innerHTML = valor;
    }

    function change_cha(){
      var valor = parseInt(document.getElementById("player_cha").value);
      var race_bonus = parseInt(document.getElementById("race-cha").innerHTML);
      document.getElementById("cha-cost").innerHTML = cost(valor);
      valor += race_bonus;

      if (valor%2 == 1) {
        valor = valor -1;
      }
      valor = valor/2;
      valor -=5;
      if (valor > 0) {
        document.getElementById("cha").style.color = "green";
      } else if (valor < 0){
        document.getElementById("cha").style.color = "red";
      } else {
        document.getElementById("cha").style.color = "black";
      }
      document.getElementById("cha").innerHTML = valor;
    }

    function check_mods(){
      var pvs = parseInt(document.getElementById("con").innerHTML);
      var c = document.getElementById("class-id").selectedIndex;
      var fort = parseInt(document.getElementById("con").innerHTML);
      var ref = parseInt(document.getElementById("dex").innerHTML);
      var will = parseInt(document.getElementById("wis").innerHTML);
      var intel = parseInt(document.getElementById("intel").innerHTML);
      var r = document.getElementById("race-id").selectedIndex;
      var bab = 0;
      var speed = 9;
      var skill_pts = 0;
      var money = "";
      switch (c) {
        case 0: //barb
          pvs+=12;
          fort += 2;
          ref +=0;
          will +=0;
          bab = 1;
          speed += 3;
          skill_pts = 4*(intel+4);
          no_loyal();
          break;
        
        case 1: //bard
          pvs+=6;
          fort += 0;
          ref +=2;
          will +=2;
          bab = 0;
          skill_pts = 4*(intel+6);
          no_loyal();
          break;
        
        case 2: //clerigo
          pvs+=8;
          fort += 2;
          ref +=0;
          will +=2;
          bab = 0;
          skill_pts = 4*(intel+2);
          all_aligments();
          break;
        
        case 3: //druida
          pvs+=8;
          fort += 2;
          ref +=0;
          will +=2;
          bab = 0;
          skill_pts = 4*(intel+4);
          just_neutral();
          break;

        case 4: //feiticeiro
          pvs+=4;
          fort += 0;
          ref +=0;
          will +=2;
          bab = 0;
          skill_pts = 4*(intel+2);
          all_aligments();
          break;

        case 5: //guerreiro
          pvs+=10;
          fort += 2;
          ref +=0;
          will +=0;
          bab = 1;
          skill_pts = 4*(intel+2);
          all_aligments();
          break;

        case 6: //ladin
          pvs+=6;
          fort += 0;
          ref +=2;
          will +=0;
          bab = 0;
          skill_pts = 4*(intel+8);
          all_aligments();
          break;

        case 7: //mago 
          pvs+=4;
          fort += 0;
          ref +=0;
          will +=2;
          bab = 0;
          skill_pts = 4*(intel+2);
          all_aligments();
          break;

        case 8: //monge
          pvs+=8;
          fort += 2;
          ref +=2;
          will +=2;
          bab = 0;
          skill_pts = 4*(intel+4);
          just_loyal();
          break;
        
        case 9: //paladin
          pvs+=10;
          fort += 2;
          ref +=0;
          will +=0;
          bab = 1;
          skill_pts = 4*(intel+2);
          hero();
          break;

        case 10: //ranger 
          pvs+=8;
          fort += 2;
          ref +=2;
          will +=0;
          bab = 1;
          skill_pts = 4*(intel+6);
          all_aligments();
          break;
      }

      if (r <= 3) {
        skill_pts += 4;
      }

      document.getElementById("pvs").innerHTML = pvs;
      document.getElementById("ref").innerHTML = ref;
      document.getElementById("fort").innerHTML = fort;
      document.getElementById("will").innerHTML = will;
      document.getElementById("bab").innerHTML = bab;
      document.getElementById("speed").innerHTML = speed;
      document.getElementById("skill-pts").innerHTML = skill_pts+" pts";
    }

    function check_points(){
      var totalCost = 0;
      var str = parseInt(document.getElementById("player_str").value);
      var dex = parseInt(document.getElementById("player_dex").value);
      var con = parseInt(document.getElementById("player_con").value);
      var intel = parseInt(document.getElementById("player_intel").value);
      var wis = parseInt(document.getElementById("player_wis").value);
      var cha = parseInt(document.getElementById("player_cha").value);
      
      totalCost = totalCost+ parseInt(cost(str));
      totalCost += parseInt(cost(dex));
      totalCost += parseInt(cost(con));
      totalCost += parseInt(cost(intel));
      totalCost += parseInt(cost(wis));
      totalCost += parseInt(cost(cha));

      document.getElementById("points").innerHTML = 32-totalCost;
      if (totalCost >32) {
        document.getElementById("points").style.color = "red";
      } else {
        document.getElementById("points").style.color = "inherit";
      }

      /*
      if (totalCost == 32){
        document.getElementById("submit").style.display = block;
      } else {
        document.getElementById("submit").style.display = none;
      } */ /*
    } 

    function cost(v){
      var cost = 0;
      switch (v){
        case 3:
          cost = -5; 
          break;
        case 4:
          cost = -4; 
          break;
        case 5:
          cost = -3; 
          break;
        case 6:
          cost = -2; 
          break;
        case 7:
          cost = -1; 
          break;
        case 8:
          cost = 0; 
          break;
        case 9:
          cost = 1; 
          break;
        case 10:
          cost = 2; 
          break;
        case 11:
          cost = 3; 
          break;
        case 12:
          cost = 4; 
          break;
        case 13:
          cost = 5; 
          break;
        case 14:
          cost = 6; 
          break;
        case 15:
          cost = 8; 
          break;
        case 16:
          cost = 10; 
          break;
        case 17:
          cost = 13; 
          break;
        case 18:
          cost = 16; 
          break;
      }
      return cost;
    }



    function clear_all_aligments(){
      var select = document.getElementById("alignment-id");
      var tam = select.length 
      for (var i=0; i<tam; i++){
        select.remove(0);
      }
    }

    function no_loyal(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var nb = document.createElement("option");
      nb.text = "Neutro e Bom";
      var nn = document.createElement("option");
      nn.text = "Neutro Puro";
      var nm = document.createElement("option");
      nm.text = "Neutro e Mau";
      var cb = document.createElement("option");
      cb.text = "Caótico e Bom";
      var cn = document.createElement("option");
      cn.text = "Caótico e Neutro";
      var cm = document.createElement("option");
      cm.text = "Caótico e Mau"; 
      select.add(nb); 
      select.add(nn); 
      select.add(nm); 
      select.add(cb); 
      select.add(cn); 
      select.add(cm); 
    }

    function no_chaotic(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var lb = document.createElement("option");
      lb.text = "Leal e Bom";
      var ln = document.createElement("option");
      ln.text = "Leal e Neutro";
      var lm = document.createElement("option");
      lm.text = "Leal e Mau";
      var nb = document.createElement("option");
      nb.text = "Neutro e Bom";
      var nn = document.createElement("option");
      nn.text = "Neutro Puro";
      var nm = document.createElement("option");
      nm.text = "Neutro e Mau";
      select.add(lb);
      select.add(ln);
      select.add(lm); 
      select.add(nb); 
      select.add(nn); 
      select.add(nm); 
    }

    function just_loyal(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var lb = document.createElement("option");
      lb.text = "Leal e Bom";
      var ln = document.createElement("option");
      ln.text = "Leal e Neutro";
      var lm = document.createElement("option");
      lm.text = "Leal e Mau";
      select.add(lb);
      select.add(ln);
      select.add(lm); 
    }

    function just_neutral(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var ln = document.createElement("option");
      ln.text = "Leal e Neutro";
      var nb = document.createElement("option");
      nb.text = "Neutro e Bom";
      var nn = document.createElement("option");
      nn.text = "Neutro Puro";
      var nm = document.createElement("option");
      nm.text = "Neutro e Mau";
      var cn = document.createElement("option");
      cn.text = "Caótico e Neutro";
      select.add(ln);
      select.add(nb); 
      select.add(nn); 
      select.add(nm); 
      select.add(cn); 
    }

    function hero(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var lb = document.createElement("option");
      lb.text = "Leal e Bom";
      select.add(lb); 
    }




    function all_aligments(){
      clear_all_aligments();
      var select = document.getElementById("alignment-id");
      var lb = document.createElement("option");
      lb.text = "Leal e Bom";
      var ln = document.createElement("option");
      ln.text = "Leal e Neutro";
      var lm = document.createElement("option");
      lm.text = "Leal e Mau";
      var nb = document.createElement("option");
      nb.text = "Neutro e Bom";
      var nn = document.createElement("option");
      nn.text = "Neutro Puro";
      var nm = document.createElement("option");
      nm.text = "Neutro e Mau";
      var cb = document.createElement("option");
      cb.text = "Caótico e Bom";
      var cn = document.createElement("option");
      cn.text = "Caótico e Neutro";
      var cm = document.createElement("option");
      cm.text = "Caótico e Mau";
      select.add(lb);
      select.add(ln);
      select.add(lm); 
      select.add(nb); 
      select.add(nn); 
      select.add(nm); 
      select.add(cb); 
      select.add(cn); 
      select.add(cm);   
    }

    //atualizando
    update();

*/

</script>