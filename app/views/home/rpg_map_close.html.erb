<div class="wraper"> 
	<div class="grid">
		<% while @count_y < @y_max %>
			<div class="row">
				<% @count_x = 0 %>
				<!--
				<% while @count_x < @x_max %>
					<% @this_id = "id_#{@count_x}_#{@count_y}" %>
					--><div id="<%=@this_id%>" class="cell"></div><!-- 
					<% @count_x +=1 %>
				<% end %>
				-->
				<% @count_y +=1 %>
			</div>
		<% end %> 
	</div>

	<div>
		Artes:
		<br>
		<a href="https://opengameart.org/content/10-basic-rpg-enemies-the-goblin-supplement" target="_blank">Goblins</a> de Stephen Challener (Redshrike)
	</div>
</div>
	<br><br><br><br><br><br><br><br><br><br><br>

<div class="new_wrapper">
		<div class="new_grid">
			<% map_x = 0 %>
			<% map_y = 0 %> 
			<% while map_y < 9 %>
				<div class="new_row">
					<% map_x = 0 %>
					<!--
					<% while map_x < 9 %>
						<% @this_id = "new_id_#{map_x}_#{map_y}" %>
						--><div id="<%=@this_id%>" class="new_cell"></div><!-- 
						<% map_x +=1 %>
					<% end %>
					-->
					<% map_y +=1 %>
				</div>
			<% end %>
		</div>
		<div class="new_interface">
		<div class="time">12:00</div>
		<div class="msg"></div> 
		
		<div class="new_button_interface">
			<div class="new_button_area">
				 <div class="no_button"></div><button type="button" class="up" onclick="up()">Cima</button><div class="no_button"></div>
				 <br>
			</div>
			<div class="new_button_area">
				 <button type="button" class="left" onclick="left()">Esquerda</button><button type="button" class="stay" onclick="end_turn()">Ficar Parado</button><button type="button" class="right"  onclick="right()">Direita</button> 
			</div>
			<div class="new_button_area">
				<div class="no_button"></div><button type="button" class="down" onclick="down()">Baixo</button><div class="no_button"></div>
			</div>
			<div class="reset" style="display: none; text-align: center;">
				<button type="button" class="reset" onclick="new_game()">Reiniciar</button>
			</div>
		</div>
	</div>

	<div class="credits">
		Artes:
		<br>
		<a href="https://opengameart.org/content/10-basic-rpg-enemies-the-goblin-supplement" target="_blank">Goblins</a> de Stephen Challener (Redshrike)
	</div>
</div>

	<div class="interface">
		<div class="time">12:00</div>
		<div class="msg"></div> 
		
		<div class="button_interface">
			<div class="button_area">
				 <div class="no_button"></div><button type="button" class="up" onclick="up()">Cima</button><div class="no_button"></div>
				 <br>
			</div>
			<div class="button_area">
				 <button type="button" class="left" onclick="left()">Esquerda</button><button type="button" class="stay" onclick="end_turn()">Ficar Parado</button><button type="button" class="right"  onclick="right()">Direita</button> 
			</div>
			<div class="button_area">
				<div class="no_button"></div><button type="button" class="down" onclick="down()">Baixo</button><div class="no_button"></div>
			</div>
			<div class="reset" style="display: none; text-align: center;">
				<button type="button" class="reset" onclick="new_game()">Reiniciar</button>
			</div>
		</div>
	</div>



	


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
	var $cow_x = 0;
	var $cow_y = 0;
	var $evil_x = 0;
	var $evil_y = 0;
	var $turn = -3;
	var $hour = 8;
	var $min = 0;
	var $day = 1;
	var $water_step = 0;
	var $max_hunger = 12;
	var $hunger = $max_hunger + 4;
	var $x_max = <%= @x_max %>-1;
	var $y_max = <%= @y_max %>-1;
	var $line_sight = 2;
	var $local_map = <%= @map %>;
	var $enemies = [];

	$(document).ready(new_game());

	function new_game(){
		$turn = -3;
		$hour = 8;
		$min = 0;
		$water_step = 0;
		$hunger = $max_hunger + 4;
		//codigo para rodar no começo
		$(".button_area").show();
		$(".reset").hide();
		
		//put_tiles();//);
        $cow_x = random(0, <%= @x_max %>-1);
       	$cow_y = random(0, <%= @y_max %>-1);
        draw_cow();

		
		place_evil();
		//shadows();
		//lights($line_sight);
		cow_msg();
		check_interface();
   // jQuery methods go here...
   		//show_damage(71, 1, 1);
   		build_map();
draw_map();

	};


	//CSS
	function get_width(){
		//var width = $(".new_cell").css("width");
		//$(".new_cell").css("height", width);
		//$(".new_cell").css("width", width);
	}


	function get_time(){ 
		//$(".time").html($hour+":"+$min);
		var $time_msg;
		if( 4 <= $hour && $hour < 7 ){
			$time_msg = "Alvorecer";
			if ($hour == 4){
				$line_sight = 3;
			} else {
				$line_sight = 4;
			}
			is_night(true);
		} else if( 7 <= $hour && $hour < 11 ){
			$time_msg = "Manhã";
			is_night(false);
			//redraw_map();
		} else if (11 <= $hour && $hour < 14){
			$time_msg = "Sol Alto";
			is_night(false);
		} else if (14 <= $hour && $hour < 17){
			$time_msg = "Tarde";
			is_night(false);
		} else if (17 <= $hour && $hour < 19) {
			$time_msg = "Longas Sombras";
			if ($hour == 17){
				$line_sight = 4;
			} else {
				$line_sight = 3;
			}
			is_night(true);
		} else if (19 <= $hour && $hour < 23) {
			$time_msg = "Noite";
			$line_sight = 1;
			is_night(true);
		} else if (23 <= $hour || $hour < 2) {
			$time_msg = "Lua Alta";
			$line_sight = 1;
			is_night(true);
		} else if (2 <= $hour || $hour < 4) {
			$time_msg = "Hora do Caçador";
			$line_sight = 1;
			is_night(true);
		} 
		
		//guardar
		//$(".time").html($hour+":"+$min+"||"+$time_msg);
		$(".time").html("Dia "+$day+" - "+$time_msg);
	}

	function put_tiles(){
		$(".grass").removeClass("grass");
		$(".water").removeClass("water");
		$(".ground").removeClass("ground");
		var $rand;
		for ($x = 0 ; $x <= <%= @x_max %>-1 ; $x+=1){

            var $x_val = $x;

            for ($y = 0 ; $y <= <%= @y_max %>-1 ; $y+=1){
            	var $y_val = $y;
        		var $elemento = "#id_"+$x_val+"_"+$y_val;
        		$rand = random(0, 4);
        		if ($rand == 0  ){
        			$($elemento).addClass("grass");
        		} else if($rand == 1 ) {
        			$($elemento).addClass("water");
        		} else {
        			$($elemento).addClass("ground");
        		}
        	}//);	
        }
	}

	function show_damage(dmg, x, y){

		var $location = "#id_"+x+"_"+y;
		var $dano = '<div class="damage">';
		$dano = $dano + dmg;
		$dano = $dano + "</div>";
   		$($location).append($dano);
		$(".damage").show();
		$(".damage").animate({ marginTop: "-30px" }, 1500,function() { 
 			$(".damage").remove();});
	}

	

	function end_turn(){
		if ($turn>1){
			evil_walk();
		}
		if (check_alive()==true){
			$turn +=1;
			//$(".turn").html("Turno "+$turn);
			if (check_alive() == false){
				$hunger = 0;
			}
			check_hunger();
			
		}
		cow_msg();
		check_interface();
		$hour += 1;
		if($hour > 23){
			$hour = 0;
			$day += 1;
			//$(".day").html("Dia "+$day);
		}
		get_time();
		draw_map();
		//new_monster();
		//walk_monster();
   		//place_all_monsters();
	}

	function check_hunger(){
		//var className = $(cell_id).attr('class').split(' ')[1];
		if (get_cell_type() == "grass"){
			if ($hunger < $max_hunger){
				$hunger +=3;
				if ($hunger > $max_hunger){
					$hunger = $max_hunger;
				}
				
			}
			
			
		} else {//if (className == "water" ){
			$hunger -=1;
		}
		
	}

	function get_position(){
		return "#id_"+$cow_x+"_"+$cow_y;
	}

	function get_cell_type(){
		return $(get_position()).attr('class').split(' ')[1];
	}

	function check_water(){
		if(get_cell_type() == "water"){
			$water_step +=1;
			if ($water_step == 3){
				$water_step = 0;
			}
		}
	}



	function check_alive(){
		var $cow_pos = "#id_"+$cow_x+"_"+$cow_y;
		if ($hunger < 1){ //morrer de fome
			$(".cow").remove();
			$($cow_pos).prepend('<img src="ghost.png" class="cow">');
			$(".button_area").hide();
			$(".reset").show();
			return false;
		} else if (($cow_x == $evil_x) && ($cow_y == $evil_y && $turn > 1)){
			cow_is_dead($cow_pos);	
			return false;
		} else  {
			return true;
		}
	}


	//FUNÇÃO DE PERSONAGENS
	function cow_is_dead(cow_pos){
		$(".cow").remove();
		$(".evil").remove();
		$(cow_pos).prepend('<img src="evil_happy.png" class="evil">');
		$(".button_area").hide();
		$(".reset").show();
	}

	function draw_cow(){
			$(".cow").remove();
			var $cow_pos = "#id_"+$cow_x+"_"+$cow_y;
			$($cow_pos).append('<img src="cow.png" class="cow">');
	};

	function place_evil(){
		$(".evil").remove();
		$evil_x = $cow_x;
		$evil_y = $cow_y;
		while ($evil_x == $cow_x && $evil_y == $cow_y){
			$evil_x = random(0,<%= @x_max %>-1);
			$evil_y = random(0,<%= @y_max %>-1);
		}
		var $evil_pos = "#id_"+$evil_x+"_"+$evil_y;
		//$($evil_pos).prepend('<img src="evil.png" class="evil">');
		$($evil_pos).prepend('<img src="goblin_1.png" class="evil">');
	};

	function new_monster(){
		var x = $enemies.length, y = $enemies.length; 
		
		var $new_monster = [$enemies.length, 1, x, y]; //id, tipo, x, y
		
		$enemies.push($new_monster);
		//kinds:
		//1 = goblin 
	}

	function place_all_monsters(){
		var x = 0;
		for( ; x < $enemies.length ; x+=1){
			place_monster($enemies[x][0],$enemies[x][1], $enemies[x][2], $enemies[x][3]);
		}
	}

	function place_monster(id, kind, x, y){
		var $position;
		var $img_tag = '<img src="goblin_1.png" class="evil" id="monster_';
			//$this_enemy = $enemies[x];
		$position = "#id_"+x+"_"+y;

		if (kind == 1){
			$img_tag = $img_tag+id+'">';
			$($position).append($img_tag);
			console.log("Inserindo em "+x+","+y+" a tag "+$img_tag);
		}
	}

	function walk_monster(){
		var x = 0;
		for( ; x < $enemies.length ; x+=1){
			$enemies[x][2] +=1;
		}
	}

	function evil_walk(){
		var sentido = random(0,1);
		if (sentido == 0){ //mover por x
			if ($evil_x != $cow_x){ 
				if($evil_x > $cow_x){
					$evil_x -=1;
				} else if ($evil_x < $cow_x) {
					$evil_x +=1;
				}
			} else { //só precisa mover em y
				sentido = 1;
			} 
		}
		if (sentido == 1){ //move pot y
			if ($evil_y != $cow_y){
				if($evil_y > $cow_y){
					$evil_y -=1;
				} else if ($evil_y < $cow_y) {
					$evil_y +=1;
				}
			} else { //move por x
				if($evil_x > $cow_x){
					$evil_x -=1;
				} else if ($evil_x < $cow_x) {
					$evil_x +=1;
				}
			}
		}
		$(".evil").remove();
		var $evil_pos = "#id_"+$evil_x+"_"+$evil_y;
		//$($evil_pos).prepend('<img src="evil.png" class="evil">');
		$($evil_pos).prepend('<img src="goblin_1.png" class="evil">');
	}

	//MOBILIDADE
	function up(){
		check_water();
		if ($cow_y > 0 && $water_step == 0 && check_alive() == true){
			$cow_y -= 1;
			draw_cow();
		}
		end_turn();
	};

	function down(){
		check_water();
		if ($cow_y < <%= @y_max %>-1 && $water_step == 0 && check_alive() == true){
			$cow_y += 1;
			draw_cow();
		}
		end_turn();
	};

	function left(){
		check_water();
		if ($cow_x > 0 && $water_step == 0 && check_alive() == true){
			$cow_x -= 1;
			draw_cow();
		}
		end_turn();
	};

	function right(){
		check_water();
		if ($cow_x < <%= @x_max %>-1 && $water_step == 0 && check_alive() == true){
			$cow_x += 1;
			draw_cow();
		}
		end_turn();
	};

	//FUNÇÔES MULTIUSO
	function random(min,max)
	{
		return Math.floor(Math.random()*(max-min+1)+min);
	}



	//eventos
		$(".up").click(up());
		$(".down").click(down());
		$(".left").click(left());
		$(".right").click(right());


	//iluminação e cliclo de doa/noite
	function is_night(state){
		if (state == true){
			shadows();
			lights($line_sight);
		} else {
			var $t_x = 0, $t_y = 0;
			for( ; $t_x <= $x_max; $t_x += 1){
				for ($t_y = 0; $t_y <= $y_max; $t_y +=1){
					$position = "#new_id_"+$t_x+"_"+$t_y;
					$rand = $local_map[$t_y][$t_x];
					if ($($position).hasClass("shadow_cell")){
						$($position).removeClass("shadow_cell");
						if ( 1<= $rand  && $rand <= 2   ){
			        		$($position).addClass("ground");
			        	} else if($rand == 0 ) {
			        		$($position).addClass("water");
			        	} else {
			        		$($position).addClass("grass");
						}
					}		
				}
			}

		}
	}

	function shadows(){
		var $position;
		$(".cell").each ( function (){
			//x = $(this).attr('id').split('_')[1];
			//y = $(this).attr('id').split('_')[2];
			
			if ($(this).hasClass("shadow_cell")) {
				//=***
			} else{
				$(this).addClass("shadow_cell");
				if ($(this).hasClass("grass")){
					$(this).removeClass("grass");
				}
				if ($(this).hasClass("ground")){
					$(this).removeClass("ground");
				}
				if ($(this).hasClass("water")){
					$(this).removeClass("water");
				}
			}
		});
		$(".evil").remove();		
	}

	function lights(rng){
		var $t_x = $cow_x-rng;
		var $t_y = $cow_y;
		var move = 0;
		for( ; $t_x <= $cow_x+rng + rng; $t_x += 1){
			for ($t_y = $cow_y-move; $t_y <= $cow_y+move; $t_y +=1){
				$position = "#new_id_"+$t_x+"_"+$t_y;
				if ($($position).hasClass("shadow_cell")){
					$($position).removeClass("shadow_cell");
					$rand = $local_map[$t_y][$t_x];
					if ( 1<= $rand  && $rand <= 2   ){
	        			$($position).addClass("ground");
	        		} else if($rand == 0 ) {
	        			$($position).addClass("water");
	        		} else {
	        			$($position).addClass("grass");
	        		}
	        		if ($t_x == $evil_x && $t_y == $evil_y){
	        			//$($position).prepend('<img src="evil.png" class="evil">');
	        			$($position).prepend('<img src="goblin_1.png" class="evil">');
	        		}
				}		
			}
			if($t_x < $cow_x){
				move +=1;
			} else {
				move -=1;
			}
		}
	}

	//MENSAGENS DA VACA
	function cow_msg(){
		var $msg;
		if (get_cell_type() == "grass"){
			if ($hunger == $max_hunger){
				$msg = "Carai, mucei!!!";
			} else {
				$msg = "Nham! Nham!";
			}
		} else if (get_cell_type() == "water"){
			if ($hunger <= $max_hunger/3){
				$msg = "Splash, splash!";	
			} else if ($hunger <= $max_hunger/3){
				$msg = "SPLASH! SPLASH! SPLASH!!!"
			} else {
				$msg = "Splash..."
			}
		}  else {
			if ($hunger <= $max_hunger/2 && get_cell_type() != "grass" && $hunger > $max_hunger/3) {
				$msg = "...";
			} else if ($hunger <= $max_hunger/3) {
				$msg = "Fome do carai...";
			} else if($hunger > $max_hunger/3 && get_cell_type() != "grass"){
				$msg = "Moo moo moo!";
			}
			if ($hunger == 0){
				check_alive();
				$msg = "MATOU A VAQUINHA, MONSTR@!";
			}
		}
		if ($cow_x == $evil_x && $cow_y == $evil_y){
			check_alive();
			$msg = "VAQUINHA MORREU!!! =(";
		}

		$(".msg").html($msg);
	}



	function check_interface(){
		if ($cow_x <= 19){
			
			$(".interface").css("right", "0");
			$(".interface").css("left","");
		} else if ($cow_x >= 25){
			$(".interface").css("left","0");
			$(".interface").css("right","");			
		}
	}

	function build_map(){
		var $tile;
		var $rand;
		<% @x = 0 %>
		<% @y = 0 %> 
		<% @y_max.times do |y| %>
			$tile = "#id_";
			<% @x_max.times do |x| %> 
				$tile = "#id_"+<%= x %>+"_"+<%= y %>;
				$rand = <%= @map[y][x] %> 
        		if ( 1<= $rand  && $rand <= 2   ){
        			$($tile).addClass("ground");
        		} else if($rand == 0 ) {
        			$($tile).addClass("water");
        		} else {
        			$($tile).addClass("grass");
        		}
			<% end %>
		<% end %>
		is_night(false);
	}

	//MAP
	function draw_map(){
		//var $local_map = <%= @map %>;
		//console.clear();
		var $x = 0;
		var $y = 0;
		var $new_x = $cow_x - 4;
		var $new_y = $cow_y -4;
		var realoc = 0;
		var msg;
		var local_x = 0;
		var local_y = 0;
		$(".new_cow").remove();
		for( ;$y < 9; $y+=1){
			$new_y = $cow_y-4;
			$new_x = $cow_x-4;

			local_y = $new_y;
			while ($new_y < 0){
				$new_y +=1;
			}
			while ($new_y + 8 > $y_max){
				$new_y -=1;
			}
			
			for($x=0 ;$x < 9; $x+=1){
				local_x = $new_x;
				while ($new_x < 0){
					$new_x +=1;
				}
				while ($new_x + 8 > $x_max){
					$new_x -=1;
				}
				$position = "#new_id_"+$x+"_"+$y;
				$rand = $local_map[$new_y+$y][$new_x+$x];
			
				if ( $new_x+$x == $cow_x && $new_y+$y == $cow_y  ){
					$($position).append('<img src="cow.png" class="new_cow">');
					//$($position).html("coo");
				}
				if ( $($position).hasClass("ground") ){
					$($position).removeClass("ground");
				}
				if ( $($position).hasClass("grass") ){
					$($position).removeClass("grass");
				}
				if ( $($position).hasClass("water") ){
					$($position).removeClass("water");
				}
				if ( 1<= $rand  && $rand <= 2   ){
	        		$($position).addClass("ground");
	        	} else if($rand == 0 ) {
	        		$($position).addClass("water");
	        	} else {
	        		$($position).addClass("grass");
	        	}
	        	//if ($t_x == $evil_x && $t_y == $evil_y){
	        	//	//$($position).prepend('<img src="evil.png" class="evil">');
	        	//	$($position).prepend('<img src="goblin_1.png" class="evil">');
	        	//}

			}	
		}
		console.log("-----");
		console.log($cow_x+","+$cow_y+" em turno "+$turn);
	}


</script>

<style>
/*zindex
	cow = 0
	evil = 1
	damage = 2
	shadow = 3

*/

.damage {
	color: red;
	position: absolute;
	z-index: 2;
	text-align: center;
}


.cell {
	border-width: 0px 1px 0px 0px;
	border-color: black;
	border-style: solid;
	width: 30px;
	height: 30px;
	display: inline-block;
}

.shadow{
	position: absolute;
	z-index: 4;
}

.shadow_cell {
	background-color: #000;
}

.grass {
	background-color: #88e560;/*#1cc613; */
}

.ground {
	background-color: #876b4d;
}

.water {
	background-color: #63b7e8; /*#2662ef;*/
}

.evil{
	z-index: 1;
	position: absolute;
}

.cow {
	z-index: 0;
	position: absolute;
}

.msg, .turn {
	font-size: 1em;
}

.grid {
	border-width: 1px 0px 0px 1px;
	border-color: black;
	border-style: solid;
	width: 1395px;
	height: 1395px;
	display: block;
	margin: auto;
}

.interface {
	position: fixed;
	top: 10%;
	vertical-align: top;
	background-color: #808080;
	z-index: 1200;
	height: 257px;
	/*width: 33%;*/
	width: 450px;
	text-align: center;
	height: 90vh;
	display: none;
}

.interface:hover{
	background-color:  rgba(128,128,128,0.4);
	color: rgba(0,0,0,0.4);
}

.button_interface {
	position: fixed;
	bottom: 0px;
	display: block;
	width: 450px;
	margin-right: 225px;

}

.row {
	border-width: 0px 0px 1px 0px;
	border-color: black;
	border-style: solid;
	width: 1395px;
	height: 30px;
	display: block;
}
img {
	width: 30px;
	height: 30px;
}

.wraper{
	margin-top: 200px;
	color: #000;
	background-color: #FFF;
	padding: 100px 0px;
}

.button_area {
	display: flex;
	background-color:  none;
	width: 450px;
	margin: auto;
}

.turn {
	border: none;
}

.no_button {
	display: inline-block;
	flex-grow: 1;
}

.stay{
	background-color: blue;
}

button {
	max-width: 150px;
	background-color: #4CAF50;
    border: none;
    color: white;
    padding: 15px 25px;
    text-align: center;
    font-size: 16px;
    cursor: pointer;
    display: inline-block;
    flex-grow: 1;
    font-weight: bold;
}

.new_grid {
	width: 45vw;
	display: inline-block;

}

.new_cell{
	width: 5vw;
	height: 5vw;
	display: inline-block;
}

.new_row {
	display: block;
	border: none;
	font-size: 0;
}

.new_cow {
	z-index: 0;
	position: absolute;
	width: 5vw;
	height: 5vw;
}

.new_interface{
	display: inline-block;
	height: 45vw;
	vertical-align: top;
}

.new_wrapper{
	background-color: #FFF;
	display: inline-block;
	width: 100vw;
}

.new_button_area {
	display: flex;
	background-color:  none;
	width: 450px;
	margin: auto;
}

.new_interface,div{
	font-size: 1em;
}

.credits {
	display: block;
	width: 100%;
}

/* para mobile */
@media only screen and (max-width: 1000px) {
    .interface {
    	top: 80%;
    }

    .wraper {
    	width: 100%;
    	background-color: red;
    }
}

</style>